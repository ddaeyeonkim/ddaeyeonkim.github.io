{"version":3,"file":"component---src-pages-mdx-frontmatter-slug-tsx-content-file-path-reading-contents-effective-kotlin-items-11-to-13-mdx-8a7b9ce370951505020f.js","mappings":"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","sources":["webpack://blog/./reading_contents/effective-kotlin-items-11-to-13.mdx","webpack://blog/./src/pages/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    br: \"br\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Item 11. 가독성을 목표로 설계하라\"), \"\\n\", React.createElement(_components.h3, null, \"인지 부하 감소\"), \"\\n\", React.createElement(_components.p, null, \"숙련된 코틀린 개발자도 구현 B를 이해하는데 다소 시간이 걸린다.\", React.createElement(_components.br), \"\\n\", \"기본적으로 '인지 부하'를 줄이는 방향으로 코드를 작성하자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-kotlin\"\n  }, \"// 구현 A\\nif (person != null && person.isAdult) {\\n    view.showPerson(person)\\n} else {\\n    view.showError()\\n}\\n// 구현 B\\nperson?.takeIf { it.isAdult }\\n    ?.let(view::showPerson)\\n    ?: view.showError()\\n\")), \"\\n\", React.createElement(_components.h3, null, \"let 사용 케이스\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"null check\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-kotlin\"\n  }, \"class Person(val name: String)\\nvar person: Person? = null\\n\\nfun printName() {\\n\\tperson?.let {\\n    \\tprint(it.name)\\n    }\\n}\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"연산을 아규먼트 처리 후로 이동시킬 때\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-kotlin\"\n  }, \"// A\\nprint(students.filter{}.joinToString{})\\n// B\\nstudents.filter{}.joinToString{}.let(::print)\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"데코레이터를 사용해서 객체를 랩할 떄\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-kotlin\"\n  }, \"val obj = FileInputStream(\\\"/file.gz\\\")\\n\\t.let(::BufferedInputStream)\\n    .let(::ZipInputStream)\\n    .readObject() as SomeObject\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Item 12. 연산자 오버로드를 할 때는 의미에 맞게 사용하라\"), \"\\n\", React.createElement(_components.p, null, \"관례에 어긋나는 사용은 지양하자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-kotlin\"\n  }, \"fun Int.factroial(): Int = (1..this).product()\\nfun Iterable<Int>.product(): Int = fold(1) { acc, i -> acc * i }\\n\\n// Good\\nprint(10 * 6.factorial())\\n// Bad\\noperator fun Int.not() = factorial()\\nprint(10 * !6)\\n\")), \"\\n\", React.createElement(_components.h3, null, \"분명하지 않은 경우\"), \"\\n\", React.createElement(_components.p, null, \"infix 확장 함수나 top-level 함수 사용\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-kotlin\"\n  }, \"// operator function : Bad\\noperator fun Int.times(operation: () -> Unit) = repeat(this) { operation() }\\n3 * { println(\\\"Hello\\\") } // HelloHelloHello\\n\\n// infix function : Good\\ninfix fun Int.timesRepeated(operation: () -> Unit) = repeat(this) { operation() }\\n3 timesRepeated { println(\\\"Hello\\\") } // HelloHelloHello\\n\\n// top-level function : Good\\nrepeat(this) { print(\\\"Hello\\\") }\\n\")), \"\\n\", React.createElement(_components.h3, null, \"규칙을 무시해도 되는 경우\"), \"\\n\", React.createElement(_components.p, null, \"도메인 특화 언어를 설계할 때(ex. HTML DSL)\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-kotlin\"\n  }, \"body {\\n    div {\\n        +\\\"some text\\\"\\n    }\\n}\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Item 13. Unit?을 리턴하지 말라\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"Unit?\"), \"을 리턴하면 오해를 불러 일으키기 쉽다.\", React.createElement(_components.br), \"\\n\", \"기본적으로 \", React.createElement(_components.code, null, \"Unit?\"), \"을 리턴하거나, 이를 기반으로 연산하지 말자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-kotlin\"\n  }, \"// showData()의 결과가 null이면, showError()도 호출될 수 있음\\nfun showData(): Unit?\\ngetData()?.let { view.showData() } ?: view.showError()\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/dy/Documents/blog/reading_contents/effective-kotlin-items-11-to-13.mdx\";\nimport React from 'react';\nimport Seo from '../components/Common/Seo';\nimport Template from '../components/Common/Template';\nimport PostHead from '../components/Post/PosstHead';\nimport PostContent from '../components/Post/PostContent';\nimport {jsx as ___EmotionJSX} from \"@emotion/react\";\nconst BlogPost = _ref => {\n  let {data, children} = _ref;\n  return ___EmotionJSX(Template, null, ___EmotionJSX(PostHead, {\n    title: data.mdx.frontmatter.title,\n    date: data.mdx.frontmatter.date,\n    categories: data.mdx.frontmatter.categories\n  }), ___EmotionJSX(PostContent, null, children));\n};\nconst query = \"3439641389\";\nexport const Head = _ref2 => {\n  let {data} = _ref2;\n  return ___EmotionJSX(Seo, {\n    title: data.mdx.frontmatter.title\n  });\n};\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","p","br","pre","code","ul","li","_provideComponents","components","React","className","wrapper","MDXLayout","BlogPost","_ref","data","children","___EmotionJSX","Template","PostHead","title","mdx","frontmatter","date","categories","PostContent","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}